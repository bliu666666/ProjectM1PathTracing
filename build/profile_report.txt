Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 27.52     36.23    36.23 297872674     0.00     0.00  double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
 15.44     56.56    20.33 717735335     0.00     0.00  AABB::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const
 11.94     72.28    15.72 7891494570     0.00     0.00  Vec3::operator[](int) const
  4.99     78.86     6.58 1578298914     0.00     0.00  double const& std::min<double>(double const&, double const&)
  4.19     84.36     5.51 3102203291     0.00     0.00  Vec3::Vec3()
  2.67     87.88     3.51 2009658938     0.00     0.00  __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::base() const
  2.48     91.14     3.26 1489070380     0.00     0.00  Vec3::Vec3(double, double, double)
  2.04     93.81     2.68 2365508607     0.00     0.00  std::remove_reference<double&>::type&& std::move<double&>(double&)
  1.92     96.34     2.53 788502869     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<double> >, std::is_move_constructible<double>, std::is_move_assignable<double> >::value, void>::type std::swap<double>(double&, double&)
  1.87     98.81     2.46 143547067     0.00     0.00  findFirstCollision(Ray const&, std::vector<Object*, std::allocator<Object*> > const&)
  1.83    101.22     2.41 143547067     0.00     0.00  Sphere::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const
  1.63    103.36     2.15 1004829469     0.00     0.00  bool __gnu_cxx::operator!=<Object* const*, std::vector<Object*, std::allocator<Object*> > >(__gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > > const&, __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > > const&)
  1.14    104.86     1.50 124936337     0.00     0.00  Lambertian::randomInHemisphere(Vec3 const&) const
  1.01    106.20     1.33 595745348     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long)
  1.01    107.53     1.33                             _init
  0.96    108.80     1.27 861282402     0.00     0.00  __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::operator*() const
  0.93    110.03     1.23 861282402     0.00     0.00  __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::operator++()
  0.89    111.20     1.18 595745348     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()()
  0.88    112.37     1.17 143547067     0.00     0.00  std::vector<Object*, std::allocator<Object*> >::end() const
  0.86    113.50     1.13 219178785     0.00     0.00  Vec3::operator+(Vec3 const&) const
  0.85    114.62     1.12 555577538     0.00     0.00  Vec3::dot(Vec3 const&) const
  0.82    115.70     1.08 595745348     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long)
  0.76    116.70     0.99 514182744     0.00     0.00  Vec3::length() const
  0.74    117.68     0.98 143547067     0.00     0.00  std::vector<Object*, std::allocator<Object*> >::begin() const
  0.74    118.66     0.98 24000000     0.00     0.00  calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int)
  0.73    119.62     0.96 297872674     0.00     0.00  randomDouble()
  0.73    120.58     0.96 595745348     0.00     0.00  std::uniform_real_distribution<double>::param_type::a() const
  0.73    121.55     0.96 297872674     0.00     0.00  double std::uniform_real_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_real_distribution<double>::param_type const&)
  0.45    122.14     0.59 171394248     0.00     0.00  Vec3::normalize() const
  0.45    122.73     0.59 297872674     0.00     0.00  std::uniform_real_distribution<double>::param_type::b() const
  0.45    123.32     0.59 287094134     0.00     0.00  __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::__normal_iterator(Object* const* const&)
  0.44    123.90     0.58 595745348     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min()
  0.44    124.47     0.57 297872674     0.00     0.00  double std::uniform_real_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.43    125.03     0.56 297872674     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()()
  0.36    125.50     0.47 148936337     0.00     0.00  Ray::Ray(Vec3 const&, Vec3 const&)
  0.36    125.97     0.47 124936337     0.00     0.00  Lambertian::scatter(Ray const&, HitInfo const&, Vec3&, Ray&) const
  0.35    126.44     0.46 171394250     0.00     0.00  Vec3::operator-(Vec3 const&) const
  0.32    126.86     0.42 176568061     0.00     0.00  Vec3::operator*(double) const
  0.32    127.28     0.42 124936337     0.00     0.00  Lambertian::randomUnitVector() const
  0.32    127.71     0.42                             AABB::~AABB()
  0.32    128.13     0.42 297872674     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.32    128.54     0.41 143547067     0.00     0.00  HitInfo::HitInfo()
  0.23    128.84     0.30 128568055     0.00     0.00  Ray::at(double) const
  0.22    129.13     0.29                             Lambertian::~Lambertian()
  0.21    129.41     0.28        2     0.14     0.14  Vec3::cross(Vec3 const&) const
  0.20    129.67     0.26 124936337     0.00     0.00  Vec3::nearZero() const
  0.17    129.89     0.22 124936337     0.00     0.00  Vec3::operator*(Vec3 const&) const
  0.17    130.11     0.22        3     0.07     0.10  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)
  0.15    130.31     0.20 124936337     0.00     0.00  Ray::Ray()
  0.15    130.51     0.20        1     0.20     0.20  std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl::_Vector_impl()
  0.12    130.67     0.16 62728045     0.00     0.00  Vec3::operator-()
  0.11    130.81     0.14 24000000     0.00     0.00  Camera::getRay(double, double) const
  0.10    130.94     0.13 11231890     0.00     0.00  Sphere::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const::{lambda(double)#1}::operator()(double) const
  0.09    131.06     0.12 37221460     0.00     0.00  operator*(double, Vec3 const&)
  0.09    131.19     0.12        1     0.12   129.15  render(double, double, std::vector<Object*, std::allocator<Object*> > const&, char*, Vec3 const&, Vec3 const&, Vec3 const&, double, int, int)
  0.08    131.28     0.10        1     0.10     0.10  __static_initialization_and_destruction_0(int, int)
  0.07    131.38     0.10        1     0.10     0.10  std::uniform_real_distribution<double>::param_type::param_type(double, double)
  0.07    131.47     0.09        3     0.03     0.03  std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.03    131.51     0.04        5     0.01     0.01  AABB::AABB(Material*, Vec3 const&, Vec3 const&)
  0.03    131.56     0.04        1     0.04     0.04  __static_initialization_and_destruction_0(int, int)
  0.02    131.58     0.03        1     0.03     0.03  img2rgb(unsigned int, unsigned int, double*)
  0.02    131.60     0.02        1     0.02     0.02  __static_initialization_and_destruction_0(int, int)
  0.02    131.62     0.02                             Sphere::getCenter() const
  0.01    131.63     0.01        1     0.01     0.01  __static_initialization_and_destruction_0(int, int)
  0.01    131.65     0.01                             Material::~Material()
  0.00    131.65     0.00   480000     0.00     0.00  Vec3::operator/(double) const
  0.00    131.65     0.00       24     0.00     0.00  Object** std::__niter_base<Object**>(Object**)
  0.00    131.65     0.00       22     0.00     0.00  Object*&& std::forward<Object*>(std::remove_reference<Object*>::type&)
  0.00    131.65     0.00       20     0.00     0.00  __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::__normal_iterator(Object** const&)
  0.00    131.65     0.00       16     0.00     0.00  __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::base() const
  0.00    131.65     0.00       16     0.00     0.00  std::vector<Object*, std::allocator<Object*> >::size() const
  0.00    131.65     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<Object*>::_M_max_size() const
  0.00    131.65     0.00       10     0.00     0.00  std::vector<Object*, std::allocator<Object*> >::end()
  0.00    131.65     0.00        9     0.00     0.00  std::_Vector_base<Object*, std::allocator<Object*> >::_M_get_Tp_allocator()
  0.00    131.65     0.00        8     0.00     0.00  __gnu_cxx::new_allocator<Object*>::max_size() const
  0.00    131.65     0.00        8     0.00     0.00  std::_Vector_base<Object*, std::allocator<Object*> >::_M_get_Tp_allocator() const
  0.00    131.65     0.00        8     0.00     0.00  std::vector<Object*, std::allocator<Object*> >::max_size() const
  0.00    131.65     0.00        8     0.00     0.00  std::allocator_traits<std::allocator<Object*> >::max_size(std::allocator<Object*> const&)
  0.00    131.65     0.00        8     0.00     0.00  std::vector<Object*, std::allocator<Object*> >::_S_max_size(std::allocator<Object*> const&)
  0.00    131.65     0.00        8     0.00     0.00  std::vector<Object*, std::allocator<Object*> >::_S_relocate(Object**, Object**, Object**, std::allocator<Object*>&)
  0.00    131.65     0.00        8     0.00     0.00  std::vector<Object*, std::allocator<Object*> >::_S_do_relocate(Object**, Object**, Object**, std::allocator<Object*>&, std::integral_constant<bool, true>)
  0.00    131.65     0.00        8     0.00     0.00  Object** std::__relocate_a<Object**, Object**, std::allocator<Object*> >(Object**, Object**, Object**, std::allocator<Object*>&)
  0.00    131.65     0.00        8     0.00     0.00  std::enable_if<std::__is_bitwise_relocatable<Object*, void>::value, Object**>::type std::__relocate_a_1<Object*, Object*>(Object**, Object**, Object**, std::allocator<Object*>&)
  0.00    131.65     0.00        8     0.00     0.00  unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
  0.00    131.65     0.00        6     0.00     0.00  Object::Object(Material*)
  0.00    131.65     0.00        6     0.00     0.00  void __gnu_cxx::new_allocator<Object*>::construct<Object*, Object*>(Object**, Object*&&)
  0.00    131.65     0.00        6     0.00     0.00  __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::operator*() const
  0.00    131.65     0.00        6     0.00     0.00  __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::operator-(long) const
  0.00    131.65     0.00        6     0.00     0.00  void std::allocator_traits<std::allocator<Object*> >::construct<Object*, Object*>(std::allocator<Object*>&, Object**, Object*&&)
  0.00    131.65     0.00        6     0.00     0.00  Object*& std::vector<Object*, std::allocator<Object*> >::emplace_back<Object*>(Object*&&)
  0.00    131.65     0.00        6     0.00     0.00  std::vector<Object*, std::allocator<Object*> >::back()
  0.00    131.65     0.00        6     0.00     0.00  std::vector<Object*, std::allocator<Object*> >::push_back(Object*&&)
  0.00    131.65     0.00        6     0.00     0.00  std::remove_reference<Object*&>::type&& std::move<Object*&>(Object*&)
  0.00    131.65     0.00        6     0.00     0.00  operator new(unsigned long, void*)
  0.00    131.65     0.00        5     0.00     0.00  std::_Vector_base<Object*, std::allocator<Object*> >::_M_deallocate(Object**, unsigned long)
  0.00    131.65     0.00        4     0.00     0.00  Lambertian::Lambertian(Vec3 const&)
  0.00    131.65     0.00        4     0.00     0.00  Material::Material()
  0.00    131.65     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<Object*>::deallocate(Object**, unsigned long)
  0.00    131.65     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<Object*>::allocate(unsigned long, void const*)
  0.00    131.65     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::difference_type __gnu_cxx::operator-<Object**, std::vector<Object*, std::allocator<Object*> > >(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > > const&, __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > > const&)
  0.00    131.65     0.00        4     0.00     0.00  std::vector<Object*, std::allocator<Object*> >::_M_check_len(unsigned long, char const*) const
  0.00    131.65     0.00        4     0.00     0.00  std::_Vector_base<Object*, std::allocator<Object*> >::_M_allocate(unsigned long)
  0.00    131.65     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<Object*> >::deallocate(std::allocator<Object*>&, Object**, unsigned long)
  0.00    131.65     0.00        4     0.00     0.00  std::allocator_traits<std::allocator<Object*> >::allocate(std::allocator<Object*>&, unsigned long)
  0.00    131.65     0.00        4     0.00     0.00  void std::vector<Object*, std::allocator<Object*> >::_M_realloc_insert<Object*>(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >, Object*&&)
  0.00    131.65     0.00        4     0.00     0.00  std::vector<Object*, std::allocator<Object*> >::begin()
  0.00    131.65     0.00        4     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00    131.65     0.00        3     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const
  0.00    131.65     0.00        2     0.00     0.00  std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const
  0.00    131.65     0.00        2     0.00     0.00  std::chrono::duration<double, std::ratio<1l, 1l> >::count() const
  0.00    131.65     0.00        1     0.00     0.25  createScene()
  0.00    131.65     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00    131.65     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00    131.65     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00    131.65     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00    131.65     0.00        1     0.00     0.00  writePPM(char*, unsigned int, unsigned int, unsigned char*)
  0.00    131.65     0.00        1     0.00     0.28  Camera::Camera(Vec3 const&, Vec3 const&, Vec3 const&, double, double)
  0.00    131.65     0.00        1     0.00     0.00  Sphere::Sphere(Material*, double, Vec3 const&)
  0.00    131.65     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Object*>::new_allocator()
  0.00    131.65     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Object*>::~new_allocator()
  0.00    131.65     0.00        1     0.00     0.00  std::allocator<Object*>::allocator()
  0.00    131.65     0.00        1     0.00     0.00  std::allocator<Object*>::~allocator()
  0.00    131.65     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Object**>(Object**, Object**)
  0.00    131.65     0.00        1     0.00     0.00  std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl::~_Vector_impl()
  0.00    131.65     0.00        1     0.00     0.00  std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl_data::_Vector_impl_data()
  0.00    131.65     0.00        1     0.00     0.20  std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_base()
  0.00    131.65     0.00        1     0.00     0.00  std::_Vector_base<Object*, std::allocator<Object*> >::~_Vector_base()
  0.00    131.65     0.00        1     0.00     0.10  std::uniform_real_distribution<double>::uniform_real_distribution(double, double)
  0.00    131.65     0.00        1     0.00     0.31  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long)
  0.00    131.65     0.00        1     0.00     0.31  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long)
  0.00    131.65     0.00        1     0.00     0.31  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine()
  0.00    131.65     0.00        1     0.00     0.00  std::enable_if<std::chrono::__is_duration<std::chrono::duration<double, std::ratio<1l, 1l> > >::value, std::chrono::duration<double, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<double, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00    131.65     0.00        1     0.00     0.00  std::chrono::duration<double, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1l> >, std::ratio<1l, 1000000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00    131.65     0.00        1     0.00     0.00  std::chrono::duration<double, std::ratio<1l, 1l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00    131.65     0.00        1     0.00     0.00  std::chrono::duration<double, std::ratio<1l, 1l> >::duration<double, void>(double const&)
  0.00    131.65     0.00        1     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)
  0.00    131.65     0.00        1     0.00     0.00  std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
  0.00    131.65     0.00        1     0.00     0.00  std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00    131.65     0.00        1     0.00     0.20  std::vector<Object*, std::allocator<Object*> >::vector()
  0.00    131.65     0.00        1     0.00     0.00  std::vector<Object*, std::allocator<Object*> >::~vector()
  0.00    131.65     0.00        1     0.00     0.00  void std::_Destroy<Object**>(Object**, Object**)
  0.00    131.65     0.00        1     0.00     0.00  void std::_Destroy<Object**, Object*>(Object**, Object**, std::allocator<Object*>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.01% of 131.65 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     98.3    0.00  129.40                 main [1]
                0.12  129.03       1/1           render(double, double, std::vector<Object*, std::allocator<Object*> > const&, char*, Vec3 const&, Vec3 const&, Vec3 const&, double, int, int) [2]
                0.00    0.25       1/1           createScene() [59]
                0.00    0.00       3/1489070380     Vec3::Vec3(double, double, double) [22]
                0.00    0.00       3/3102203291     Vec3::Vec3() [17]
                0.00    0.00       1/1           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [151]
                0.00    0.00       1/1           std::chrono::duration<double, std::ratio<1l, 1l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [148]
                0.00    0.00       1/2           std::chrono::duration<double, std::ratio<1l, 1l> >::count() const [131]
                0.00    0.00       1/1           std::vector<Object*, std::allocator<Object*> >::~vector() [153]
-----------------------------------------------
                0.12  129.03       1/1           main [1]
[2]     98.1    0.12  129.03       1         render(double, double, std::vector<Object*, std::allocator<Object*> > const&, char*, Vec3 const&, Vec3 const&, Vec3 const&, double, int, int) [2]
                0.98  119.00 24000000/24000000     calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int) [3]
                0.16    7.23 48000000/297872674     randomDouble() [6]
                0.14    1.04 24000000/24000000     Camera::getRay(double, double) const [35]
                0.00    0.28       1/1           Camera::Camera(Vec3 const&, Vec3 const&, Vec3 const&, double, double) [55]
                0.12    0.05 24000000/219178785     Vec3::operator+(Vec3 const&) const [28]
                0.03    0.00       1/1           img2rgb(unsigned int, unsigned int, double*) [72]
                0.00    0.00  480000/1489070380     Vec3::Vec3(double, double, double) [22]
                0.00    0.00  480000/480000      Vec3::operator/(double) const [79]
                0.00    0.00       1/1           writePPM(char*, unsigned int, unsigned int, unsigned char*) [136]
-----------------------------------------------
                             124936337             calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int) [3]
                0.98  119.00 24000000/24000000     render(double, double, std::vector<Object*, std::allocator<Object*> > const&, char*, Vec3 const&, Vec3 const&, Vec3 const&, double, int, int) [2]
[3]     91.1    0.98  119.00 24000000+124936337 calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int) [3]
                2.46   70.78 143547067/143547067     findFirstCollision(Ray const&, std::vector<Object*, std::allocator<Object*> > const&) [4]
                0.47   43.28 124936337/124936337     Lambertian::scatter(Ray const&, HitInfo const&, Vec3&, Ray&) const [9]
                0.20    0.44 124936337/124936337     Ray::Ray() [42]
                0.22    0.27 124936337/124936337     Vec3::operator*(Vec3 const&) const [46]
                0.22    0.00 124936337/3102203291     Vec3::Vec3() [17]
                0.06    0.15 18610730/171394248     Vec3::normalize() const [26]
                0.12    0.08 37221460/37221460     operator*(double, Vec3 const&) [60]
                0.10    0.04 18610730/219178785     Vec3::operator+(Vec3 const&) const [28]
                0.09    0.00 42610730/1489070380     Vec3::Vec3(double, double, double) [22]
                             124936337             calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int) [3]
-----------------------------------------------
                2.46   70.78 143547067/143547067     calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int) [3]
[4]     55.6    2.46   70.78 143547067         findFirstCollision(Ray const&, std::vector<Object*, std::allocator<Object*> > const&) [4]
               20.33   31.34 717735335/717735335     AABB::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [5]
                2.15    3.51 1004829469/1004829469     bool __gnu_cxx::operator!=<Object* const*, std::vector<Object*, std::allocator<Object*> > >(__gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > > const&, __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > > const&) [16]
                2.41    1.82 143547067/143547067     Sphere::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [19]
                3.06    0.00 1722564804/3102203291     Vec3::Vec3() [17]
                1.17    0.29 143547067/143547067     std::vector<Object*, std::allocator<Object*> >::end() const [29]
                0.98    0.29 143547067/143547067     std::vector<Object*, std::allocator<Object*> >::begin() const [32]
                1.27    0.00 861282402/861282402     __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::operator*() const [33]
                1.23    0.00 861282402/861282402     __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::operator++() [34]
                0.41    0.51 143547067/143547067     HitInfo::HitInfo() [39]
-----------------------------------------------
               20.33   31.34 717735335/717735335     findFirstCollision(Ray const&, std::vector<Object*, std::allocator<Object*> > const&) [4]
[5]     39.2   20.33   31.34 717735335         AABB::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [5]
               15.72    0.00 7891494570/7891494570     Vec3::operator[](int) const [14]
                6.58    0.00 1578298914/1578298914     double const& std::min<double>(double const&, double const&) [15]
                2.53    2.68 788502869/788502869     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<double> >, std::is_move_constructible<double>, std::is_move_assignable<double> >::value, void>::type std::swap<double>(double&, double&) [18]
                0.29    1.49 124720876/128568055     Ray::at(double) const [27]
                1.27    0.00 717735335/3102203291     Vec3::Vec3() [17]
                0.78    0.00 357142107/1489070380     Vec3::Vec3(double, double, double) [22]
-----------------------------------------------
                0.16    7.23 48000000/297872674     render(double, double, std::vector<Object*, std::allocator<Object*> > const&, char*, Vec3 const&, Vec3 const&, Vec3 const&, double, int, int) [2]
                0.81   37.64 249872674/297872674     Lambertian::randomUnitVector() const [13]
[6]     34.8    0.96   44.87 297872674         randomDouble() [6]
                0.57   43.89 297872674/297872674     double std::uniform_real_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [7]
                0.00    0.31       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [52]
                0.00    0.10       1/1           std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [67]
-----------------------------------------------
                0.57   43.89 297872674/297872674     randomDouble() [6]
[7]     33.8    0.57   43.89 297872674         double std::uniform_real_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [7]
                0.96   42.93 297872674/297872674     double std::uniform_real_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_real_distribution<double>::param_type const&) [8]
-----------------------------------------------
                0.96   42.93 297872674/297872674     double std::uniform_real_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [7]
[8]     33.3    0.96   42.93 297872674         double std::uniform_real_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_real_distribution<double>::param_type const&) [8]
                0.56   40.40 297872674/297872674     std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [11]
                0.96    0.00 595745348/595745348     std::uniform_real_distribution<double>::param_type::a() const [38]
                0.59    0.00 297872674/297872674     std::uniform_real_distribution<double>::param_type::b() const [43]
                0.42    0.00 297872674/297872674     std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [48]
-----------------------------------------------
                0.47   43.28 124936337/124936337     calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int) [3]
[9]     33.2    0.47   43.28 124936337         Lambertian::scatter(Ray const&, HitInfo const&, Vec3&, Ray&) const [9]
                1.50   39.70 124936337/124936337     Lambertian::randomInHemisphere(Vec3 const&) const [10]
                0.39    1.43 124936337/148936337     Ray::Ray(Vec3 const&, Vec3 const&) [25]
                0.26    0.00 124936337/124936337     Vec3::nearZero() const [57]
-----------------------------------------------
                1.50   39.70 124936337/124936337     Lambertian::scatter(Ray const&, HitInfo const&, Vec3&, Ray&) const [9]
[10]    31.3    1.50   39.70 124936337         Lambertian::randomInHemisphere(Vec3 const&) const [10]
                0.42   38.72 124936337/124936337     Lambertian::randomUnitVector() const [13]
                0.16    0.14 62728045/62728045     Vec3::operator-() [53]
                0.25    0.00 124936337/555577538     Vec3::dot(Vec3 const&) const [36]
-----------------------------------------------
                0.56   40.40 297872674/297872674     double std::uniform_real_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_real_distribution<double>::param_type const&) [8]
[11]    31.1    0.56   40.40 297872674         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [11]
               36.23    4.17 297872674/297872674     double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [12]
-----------------------------------------------
               36.23    4.17 297872674/297872674     std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [11]
[12]    30.7   36.23    4.17 297872674         double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [12]
                1.18    2.42 595745348/595745348     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [20]
                0.58    0.00 595745348/595745348     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [45]
-----------------------------------------------
                0.42   38.72 124936337/124936337     Lambertian::randomInHemisphere(Vec3 const&) const [10]
[13]    29.7    0.42   38.72 124936337         Lambertian::randomUnitVector() const [13]
                0.81   37.64 249872674/297872674     randomDouble() [6]
                0.27    0.00 124936337/1489070380     Vec3::Vec3(double, double, double) [22]
-----------------------------------------------
               15.72    0.00 7891494570/7891494570     AABB::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [5]
[14]    11.9   15.72    0.00 7891494570         Vec3::operator[](int) const [14]
-----------------------------------------------
                6.58    0.00 1578298914/1578298914     AABB::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [5]
[15]     5.0    6.58    0.00 1578298914         double const& std::min<double>(double const&, double const&) [15]
-----------------------------------------------
                2.15    3.51 1004829469/1004829469     findFirstCollision(Ray const&, std::vector<Object*, std::allocator<Object*> > const&) [4]
[16]     4.3    2.15    3.51 1004829469         bool __gnu_cxx::operator!=<Object* const*, std::vector<Object*, std::allocator<Object*> > >(__gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > > const&, __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > > const&) [16]
                3.51    0.00 2009658938/2009658938     __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::base() const [21]
-----------------------------------------------
                0.00    0.00       3/3102203291     main [1]
                0.00    0.00       4/3102203291     Camera::Camera(Vec3 const&, Vec3 const&, Vec3 const&, double, double) [55]
                0.22    0.00 124936337/3102203291     calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int) [3]
                0.44    0.00 249872674/3102203291     Ray::Ray() [42]
                0.51    0.00 287094134/3102203291     HitInfo::HitInfo() [39]
                1.27    0.00 717735335/3102203291     AABB::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [5]
                3.06    0.00 1722564804/3102203291     findFirstCollision(Ray const&, std::vector<Object*, std::allocator<Object*> > const&) [4]
[17]     4.2    5.51    0.00 3102203291         Vec3::Vec3() [17]
-----------------------------------------------
                2.53    2.68 788502869/788502869     AABB::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [5]
[18]     4.0    2.53    2.68 788502869         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<double> >, std::is_move_constructible<double>, std::is_move_assignable<double> >::value, void>::type std::swap<double>(double&, double&) [18]
                2.68    0.00 2365508607/2365508607     std::remove_reference<double&>::type&& std::move<double&>(double&) [23]
-----------------------------------------------
                2.41    1.82 143547067/143547067     findFirstCollision(Ray const&, std::vector<Object*, std::allocator<Object*> > const&) [4]
[19]     3.2    2.41    1.82 143547067         Sphere::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [19]
                0.87    0.00 430641201/555577538     Vec3::dot(Vec3 const&) const [36]
                0.39    0.31 143547067/171394250     Vec3::operator-(Vec3 const&) const [40]
                0.13    0.12 11231890/11231890     Sphere::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const::{lambda(double)#1}::operator()(double) const [58]
-----------------------------------------------
                1.18    2.42 595745348/595745348     double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [12]
[20]     2.7    1.18    2.42 595745348         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [20]
                1.08    1.33 595745348/595745348     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [24]
-----------------------------------------------
                3.51    0.00 2009658938/2009658938     bool __gnu_cxx::operator!=<Object* const*, std::vector<Object*, std::allocator<Object*> > >(__gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > > const&, __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > > const&) [16]
[21]     2.7    3.51    0.00 2009658938         __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::base() const [21]
-----------------------------------------------
                0.00    0.00       2/1489070380     Vec3::cross(Vec3 const&) const [56]
                0.00    0.00       3/1489070380     main [1]
                0.00    0.00      15/1489070380     createScene() [59]
                0.00    0.00  480000/1489070380     render(double, double, std::vector<Object*, std::allocator<Object*> > const&, char*, Vec3 const&, Vec3 const&, Vec3 const&, double, int, int) [2]
                0.00    0.00  480000/1489070380     Vec3::operator/(double) const [79]
                0.08    0.00 37221460/1489070380     operator*(double, Vec3 const&) [60]
                0.09    0.00 42610730/1489070380     calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int) [3]
                0.14    0.00 62728045/1489070380     Vec3::operator-() [53]
                0.27    0.00 124936337/1489070380     Lambertian::randomUnitVector() const [13]
                0.27    0.00 124936337/1489070380     Vec3::operator*(Vec3 const&) const [46]
                0.38    0.00 171394248/1489070380     Vec3::normalize() const [26]
                0.38    0.00 171394250/1489070380     Vec3::operator-(Vec3 const&) const [40]
                0.39    0.00 176568061/1489070380     Vec3::operator*(double) const [41]
                0.48    0.00 219178785/1489070380     Vec3::operator+(Vec3 const&) const [28]
                0.78    0.00 357142107/1489070380     AABB::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [5]
[22]     2.5    3.26    0.00 1489070380         Vec3::Vec3(double, double, double) [22]
-----------------------------------------------
                2.68    0.00 2365508607/2365508607     std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<double> >, std::is_move_constructible<double>, std::is_move_assignable<double> >::value, void>::type std::swap<double>(double&, double&) [18]
[23]     2.0    2.68    0.00 2365508607         std::remove_reference<double&>::type&& std::move<double&>(double&) [23]
-----------------------------------------------
                1.08    1.33 595745348/595745348     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [20]
[24]     1.8    1.08    1.33 595745348         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [24]
                1.33    0.00 595745348/595745348     std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [30]
-----------------------------------------------
                0.08    0.28 24000000/148936337     Camera::getRay(double, double) const [35]
                0.39    1.43 124936337/148936337     Lambertian::scatter(Ray const&, HitInfo const&, Vec3&, Ray&) const [9]
[25]     1.7    0.47    1.71 148936337         Ray::Ray(Vec3 const&, Vec3 const&) [25]
                0.52    1.19 148936337/171394248     Vec3::normalize() const [26]
-----------------------------------------------
                0.00    0.00       2/171394248     Camera::Camera(Vec3 const&, Vec3 const&, Vec3 const&, double, double) [55]
                0.01    0.03 3847179/171394248     Sphere::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const::{lambda(double)#1}::operator()(double) const [58]
                0.06    0.15 18610730/171394248     calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int) [3]
                0.52    1.19 148936337/171394248     Ray::Ray(Vec3 const&, Vec3 const&) [25]
[26]     1.5    0.59    1.37 171394248         Vec3::normalize() const [26]
                0.99    0.00 514182744/514182744     Vec3::length() const [37]
                0.38    0.00 171394248/1489070380     Vec3::Vec3(double, double, double) [22]
-----------------------------------------------
                0.01    0.05 3847179/128568055     Sphere::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const::{lambda(double)#1}::operator()(double) const [58]
                0.29    1.49 124720876/128568055     AABB::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [5]
[27]     1.4    0.30    1.54 128568055         Ray::at(double) const [27]
                0.66    0.28 128568055/219178785     Vec3::operator+(Vec3 const&) const [28]
                0.31    0.28 128568055/176568061     Vec3::operator*(double) const [41]
-----------------------------------------------
                0.10    0.04 18610730/219178785     calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int) [3]
                0.12    0.05 24000000/219178785     render(double, double, std::vector<Object*, std::allocator<Object*> > const&, char*, Vec3 const&, Vec3 const&, Vec3 const&, double, int, int) [2]
                0.25    0.11 48000000/219178785     Camera::getRay(double, double) const [35]
                0.66    0.28 128568055/219178785     Ray::at(double) const [27]
[28]     1.2    1.13    0.48 219178785         Vec3::operator+(Vec3 const&) const [28]
                0.48    0.00 219178785/1489070380     Vec3::Vec3(double, double, double) [22]
-----------------------------------------------
                1.17    0.29 143547067/143547067     findFirstCollision(Ray const&, std::vector<Object*, std::allocator<Object*> > const&) [4]
[29]     1.1    1.17    0.29 143547067         std::vector<Object*, std::allocator<Object*> >::end() const [29]
                0.29    0.00 143547067/287094134     __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::__normal_iterator(Object* const* const&) [44]
-----------------------------------------------
                1.33    0.00 595745348/595745348     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [24]
[30]     1.0    1.33    0.00 595745348         std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [30]
-----------------------------------------------
                                                 <spontaneous>
[31]     1.0    1.33    0.00                 _init [31]
-----------------------------------------------
                0.98    0.29 143547067/143547067     findFirstCollision(Ray const&, std::vector<Object*, std::allocator<Object*> > const&) [4]
[32]     1.0    0.98    0.29 143547067         std::vector<Object*, std::allocator<Object*> >::begin() const [32]
                0.29    0.00 143547067/287094134     __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::__normal_iterator(Object* const* const&) [44]
-----------------------------------------------
                1.27    0.00 861282402/861282402     findFirstCollision(Ray const&, std::vector<Object*, std::allocator<Object*> > const&) [4]
[33]     1.0    1.27    0.00 861282402         __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::operator*() const [33]
-----------------------------------------------
                1.23    0.00 861282402/861282402     findFirstCollision(Ray const&, std::vector<Object*, std::allocator<Object*> > const&) [4]
[34]     0.9    1.23    0.00 861282402         __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::operator++() [34]
-----------------------------------------------
                0.14    1.04 24000000/24000000     render(double, double, std::vector<Object*, std::allocator<Object*> > const&, char*, Vec3 const&, Vec3 const&, Vec3 const&, double, int, int) [2]
[35]     0.9    0.14    1.04 24000000         Camera::getRay(double, double) const [35]
                0.25    0.11 48000000/219178785     Vec3::operator+(Vec3 const&) const [28]
                0.08    0.28 24000000/148936337     Ray::Ray(Vec3 const&, Vec3 const&) [25]
                0.12    0.11 48000000/176568061     Vec3::operator*(double) const [41]
                0.06    0.05 24000000/171394250     Vec3::operator-(Vec3 const&) const [40]
-----------------------------------------------
                0.25    0.00 124936337/555577538     Lambertian::randomInHemisphere(Vec3 const&) const [10]
                0.87    0.00 430641201/555577538     Sphere::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [19]
[36]     0.9    1.12    0.00 555577538         Vec3::dot(Vec3 const&) const [36]
-----------------------------------------------
                0.99    0.00 514182744/514182744     Vec3::normalize() const [26]
[37]     0.8    0.99    0.00 514182744         Vec3::length() const [37]
-----------------------------------------------
                0.96    0.00 595745348/595745348     double std::uniform_real_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_real_distribution<double>::param_type const&) [8]
[38]     0.7    0.96    0.00 595745348         std::uniform_real_distribution<double>::param_type::a() const [38]
-----------------------------------------------
                0.41    0.51 143547067/143547067     findFirstCollision(Ray const&, std::vector<Object*, std::allocator<Object*> > const&) [4]
[39]     0.7    0.41    0.51 143547067         HitInfo::HitInfo() [39]
                0.51    0.00 287094134/3102203291     Vec3::Vec3() [17]
-----------------------------------------------
                0.00    0.00       4/171394250     Camera::Camera(Vec3 const&, Vec3 const&, Vec3 const&, double, double) [55]
                0.01    0.01 3847179/171394250     Sphere::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const::{lambda(double)#1}::operator()(double) const [58]
                0.06    0.05 24000000/171394250     Camera::getRay(double, double) const [35]
                0.39    0.31 143547067/171394250     Sphere::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [19]
[40]     0.6    0.46    0.38 171394250         Vec3::operator-(Vec3 const&) const [40]
                0.38    0.00 171394250/1489070380     Vec3::Vec3(double, double, double) [22]
-----------------------------------------------
                0.00    0.00       6/176568061     Camera::Camera(Vec3 const&, Vec3 const&, Vec3 const&, double, double) [55]
                0.12    0.11 48000000/176568061     Camera::getRay(double, double) const [35]
                0.31    0.28 128568055/176568061     Ray::at(double) const [27]
[41]     0.6    0.42    0.39 176568061         Vec3::operator*(double) const [41]
                0.39    0.00 176568061/1489070380     Vec3::Vec3(double, double, double) [22]
-----------------------------------------------
                0.20    0.44 124936337/124936337     calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int) [3]
[42]     0.5    0.20    0.44 124936337         Ray::Ray() [42]
                0.44    0.00 249872674/3102203291     Vec3::Vec3() [17]
-----------------------------------------------
                0.59    0.00 297872674/297872674     double std::uniform_real_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_real_distribution<double>::param_type const&) [8]
[43]     0.4    0.59    0.00 297872674         std::uniform_real_distribution<double>::param_type::b() const [43]
-----------------------------------------------
                0.29    0.00 143547067/287094134     std::vector<Object*, std::allocator<Object*> >::begin() const [32]
                0.29    0.00 143547067/287094134     std::vector<Object*, std::allocator<Object*> >::end() const [29]
[44]     0.4    0.59    0.00 287094134         __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::__normal_iterator(Object* const* const&) [44]
-----------------------------------------------
                0.58    0.00 595745348/595745348     double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [12]
[45]     0.4    0.58    0.00 595745348         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [45]
-----------------------------------------------
                0.22    0.27 124936337/124936337     calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int) [3]
[46]     0.4    0.22    0.27 124936337         Vec3::operator*(Vec3 const&) const [46]
                0.27    0.00 124936337/1489070380     Vec3::Vec3(double, double, double) [22]
-----------------------------------------------
                                                 <spontaneous>
[47]     0.3    0.42    0.00                 AABB::~AABB() [47]
-----------------------------------------------
                0.42    0.00 297872674/297872674     double std::uniform_real_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_real_distribution<double>::param_type const&) [8]
[48]     0.3    0.42    0.00 297872674         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [48]
-----------------------------------------------
                0.22    0.09       3/3           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [50]
[49]     0.2    0.22    0.09       3         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [49]
                0.09    0.00       3/3           std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [68]
-----------------------------------------------
                0.00    0.31       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [51]
[50]     0.2    0.00    0.31       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [50]
                0.22    0.09       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [49]
-----------------------------------------------
                0.00    0.31       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [52]
[51]     0.2    0.00    0.31       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [51]
                0.00    0.31       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [50]
-----------------------------------------------
                0.00    0.31       1/1           randomDouble() [6]
[52]     0.2    0.00    0.31       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [52]
                0.00    0.31       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [51]
-----------------------------------------------
                0.16    0.14 62728045/62728045     Lambertian::randomInHemisphere(Vec3 const&) const [10]
[53]     0.2    0.16    0.14 62728045         Vec3::operator-() [53]
                0.14    0.00 62728045/1489070380     Vec3::Vec3(double, double, double) [22]
-----------------------------------------------
                                                 <spontaneous>
[54]     0.2    0.29    0.00                 Lambertian::~Lambertian() [54]
-----------------------------------------------
                0.00    0.28       1/1           render(double, double, std::vector<Object*, std::allocator<Object*> > const&, char*, Vec3 const&, Vec3 const&, Vec3 const&, double, int, int) [2]
[55]     0.2    0.00    0.28       1         Camera::Camera(Vec3 const&, Vec3 const&, Vec3 const&, double, double) [55]
                0.28    0.00       2/2           Vec3::cross(Vec3 const&) const [56]
                0.00    0.00       6/176568061     Vec3::operator*(double) const [41]
                0.00    0.00       2/171394248     Vec3::normalize() const [26]
                0.00    0.00       4/171394250     Vec3::operator-(Vec3 const&) const [40]
                0.00    0.00       4/3102203291     Vec3::Vec3() [17]
-----------------------------------------------
                0.28    0.00       2/2           Camera::Camera(Vec3 const&, Vec3 const&, Vec3 const&, double, double) [55]
[56]     0.2    0.28    0.00       2         Vec3::cross(Vec3 const&) const [56]
                0.00    0.00       2/1489070380     Vec3::Vec3(double, double, double) [22]
-----------------------------------------------
                0.26    0.00 124936337/124936337     Lambertian::scatter(Ray const&, HitInfo const&, Vec3&, Ray&) const [9]
[57]     0.2    0.26    0.00 124936337         Vec3::nearZero() const [57]
-----------------------------------------------
                0.13    0.12 11231890/11231890     Sphere::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [19]
[58]     0.2    0.13    0.12 11231890         Sphere::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const::{lambda(double)#1}::operator()(double) const [58]
                0.01    0.05 3847179/128568055     Ray::at(double) const [27]
                0.01    0.03 3847179/171394248     Vec3::normalize() const [26]
                0.01    0.01 3847179/171394250     Vec3::operator-(Vec3 const&) const [40]
-----------------------------------------------
                0.00    0.25       1/1           main [1]
[59]     0.2    0.00    0.25       1         createScene() [59]
                0.00    0.20       1/1           std::vector<Object*, std::allocator<Object*> >::vector() [63]
                0.04    0.00       5/5           AABB::AABB(Material*, Vec3 const&, Vec3 const&) [69]
                0.00    0.00      15/1489070380     Vec3::Vec3(double, double, double) [22]
                0.00    0.00       6/6           std::vector<Object*, std::allocator<Object*> >::push_back(Object*&&) [113]
                0.00    0.00       4/4           Lambertian::Lambertian(Vec3 const&) [117]
                0.00    0.00       1/1           Sphere::Sphere(Material*, double, Vec3 const&) [137]
-----------------------------------------------
                0.12    0.08 37221460/37221460     calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int) [3]
[60]     0.2    0.12    0.08 37221460         operator*(double, Vec3 const&) [60]
                0.08    0.00 37221460/1489070380     Vec3::Vec3(double, double, double) [22]
-----------------------------------------------
                0.20    0.00       1/1           std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_base() [62]
[61]     0.2    0.20    0.00       1         std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl::_Vector_impl() [61]
                0.00    0.00       1/1           std::allocator<Object*>::allocator() [140]
                0.00    0.00       1/1           std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl_data::_Vector_impl_data() [144]
-----------------------------------------------
                0.00    0.20       1/1           std::vector<Object*, std::allocator<Object*> >::vector() [63]
[62]     0.2    0.00    0.20       1         std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_base() [62]
                0.20    0.00       1/1           std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl::_Vector_impl() [61]
-----------------------------------------------
                0.00    0.20       1/1           createScene() [59]
[63]     0.2    0.00    0.20       1         std::vector<Object*, std::allocator<Object*> >::vector() [63]
                0.00    0.20       1/1           std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_base() [62]
-----------------------------------------------
                0.10    0.00       1/1           _GLOBAL__sub_I__ZN4Vec3C2Ev [65]
[64]     0.1    0.10    0.00       1         __static_initialization_and_destruction_0(int, int) [64]
-----------------------------------------------
                                                 <spontaneous>
[65]     0.1    0.00    0.10                 _GLOBAL__sub_I__ZN4Vec3C2Ev [65]
                0.10    0.00       1/1           __static_initialization_and_destruction_0(int, int) [64]
-----------------------------------------------
                0.10    0.00       1/1           std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [67]
[66]     0.1    0.10    0.00       1         std::uniform_real_distribution<double>::param_type::param_type(double, double) [66]
-----------------------------------------------
                0.00    0.10       1/1           randomDouble() [6]
[67]     0.1    0.00    0.10       1         std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [67]
                0.10    0.00       1/1           std::uniform_real_distribution<double>::param_type::param_type(double, double) [66]
-----------------------------------------------
                0.09    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [49]
[68]     0.1    0.09    0.00       3         std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [68]
-----------------------------------------------
                0.04    0.00       5/5           createScene() [59]
[69]     0.0    0.04    0.00       5         AABB::AABB(Material*, Vec3 const&, Vec3 const&) [69]
                0.00    0.00       5/6           Object::Object(Material*) [106]
-----------------------------------------------
                0.04    0.00       1/1           _GLOBAL__sub_I__ZNK3Ray2atEd [71]
[70]     0.0    0.04    0.00       1         __static_initialization_and_destruction_0(int, int) [70]
-----------------------------------------------
                                                 <spontaneous>
[71]     0.0    0.00    0.04                 _GLOBAL__sub_I__ZNK3Ray2atEd [71]
                0.04    0.00       1/1           __static_initialization_and_destruction_0(int, int) [70]
-----------------------------------------------
                0.03    0.00       1/1           render(double, double, std::vector<Object*, std::allocator<Object*> > const&, char*, Vec3 const&, Vec3 const&, Vec3 const&, double, int, int) [2]
[72]     0.0    0.03    0.00       1         img2rgb(unsigned int, unsigned int, double*) [72]
-----------------------------------------------
                0.02    0.00       1/1           _GLOBAL__sub_I__ZN6CameraC2ERK4Vec3S2_S2_dd [74]
[73]     0.0    0.02    0.00       1         __static_initialization_and_destruction_0(int, int) [73]
-----------------------------------------------
                                                 <spontaneous>
[74]     0.0    0.00    0.02                 _GLOBAL__sub_I__ZN6CameraC2ERK4Vec3S2_S2_dd [74]
                0.02    0.00       1/1           __static_initialization_and_destruction_0(int, int) [73]
-----------------------------------------------
                                                 <spontaneous>
[75]     0.0    0.02    0.00                 Sphere::getCenter() const [75]
-----------------------------------------------
                0.01    0.00       1/1           _GLOBAL__sub_I__ZNK10Lambertian7scatterERK3RayRK7HitInfoR4Vec3RS0_ [77]
[76]     0.0    0.01    0.00       1         __static_initialization_and_destruction_0(int, int) [76]
-----------------------------------------------
                                                 <spontaneous>
[77]     0.0    0.00    0.01                 _GLOBAL__sub_I__ZNK10Lambertian7scatterERK3RayRK7HitInfoR4Vec3RS0_ [77]
                0.01    0.00       1/1           __static_initialization_and_destruction_0(int, int) [76]
-----------------------------------------------
                                                 <spontaneous>
[78]     0.0    0.01    0.00                 Material::~Material() [78]
-----------------------------------------------
                0.00    0.00  480000/480000      render(double, double, std::vector<Object*, std::allocator<Object*> > const&, char*, Vec3 const&, Vec3 const&, Vec3 const&, double, int, int) [2]
[79]     0.0    0.00    0.00  480000         Vec3::operator/(double) const [79]
                0.00    0.00  480000/1489070380     Vec3::Vec3(double, double, double) [22]
-----------------------------------------------
                0.00    0.00      24/24          Object** std::__relocate_a<Object**, Object**, std::allocator<Object*> >(Object**, Object**, Object**, std::allocator<Object*>&) [103]
[88]     0.0    0.00    0.00      24         Object** std::__niter_base<Object**>(Object**) [88]
-----------------------------------------------
                0.00    0.00       4/22          void std::vector<Object*, std::allocator<Object*> >::_M_realloc_insert<Object*>(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >, Object*&&) [126]
                0.00    0.00       6/22          Object*& std::vector<Object*, std::allocator<Object*> >::emplace_back<Object*>(Object*&&) [111]
                0.00    0.00       6/22          void std::allocator_traits<std::allocator<Object*> >::construct<Object*, Object*>(std::allocator<Object*>&, Object**, Object*&&) [110]
                0.00    0.00       6/22          void __gnu_cxx::new_allocator<Object*>::construct<Object*, Object*>(Object**, Object*&&) [107]
[89]     0.0    0.00    0.00      22         Object*&& std::forward<Object*>(std::remove_reference<Object*>::type&) [89]
-----------------------------------------------
                0.00    0.00       4/20          std::vector<Object*, std::allocator<Object*> >::begin() [127]
                0.00    0.00       6/20          __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::operator-(long) const [109]
                0.00    0.00      10/20          std::vector<Object*, std::allocator<Object*> >::end() [94]
[90]     0.0    0.00    0.00      20         __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::__normal_iterator(Object** const&) [90]
-----------------------------------------------
                0.00    0.00       8/16          void std::vector<Object*, std::allocator<Object*> >::_M_realloc_insert<Object*>(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >, Object*&&) [126]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::difference_type __gnu_cxx::operator-<Object**, std::vector<Object*, std::allocator<Object*> > >(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > > const&, __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > > const&) [121]
[91]     0.0    0.00    0.00      16         __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::base() const [91]
-----------------------------------------------
                0.00    0.00      16/16          std::vector<Object*, std::allocator<Object*> >::_M_check_len(unsigned long, char const*) const [122]
[92]     0.0    0.00    0.00      16         std::vector<Object*, std::allocator<Object*> >::size() const [92]
-----------------------------------------------
                0.00    0.00       4/12          __gnu_cxx::new_allocator<Object*>::allocate(unsigned long, void const*) [120]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<Object*>::max_size() const [96]
[93]     0.0    0.00    0.00      12         __gnu_cxx::new_allocator<Object*>::_M_max_size() const [93]
-----------------------------------------------
                0.00    0.00       4/10          Object*& std::vector<Object*, std::allocator<Object*> >::emplace_back<Object*>(Object*&&) [111]
                0.00    0.00       6/10          std::vector<Object*, std::allocator<Object*> >::back() [112]
[94]     0.0    0.00    0.00      10         std::vector<Object*, std::allocator<Object*> >::end() [94]
                0.00    0.00      10/20          __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::__normal_iterator(Object** const&) [90]
-----------------------------------------------
                0.00    0.00       1/9           std::vector<Object*, std::allocator<Object*> >::~vector() [153]
                0.00    0.00       8/9           void std::vector<Object*, std::allocator<Object*> >::_M_realloc_insert<Object*>(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >, Object*&&) [126]
[95]     0.0    0.00    0.00       9         std::_Vector_base<Object*, std::allocator<Object*> >::_M_get_Tp_allocator() [95]
-----------------------------------------------
                0.00    0.00       8/8           std::allocator_traits<std::allocator<Object*> >::max_size(std::allocator<Object*> const&) [99]
[96]     0.0    0.00    0.00       8         __gnu_cxx::new_allocator<Object*>::max_size() const [96]
                0.00    0.00       8/12          __gnu_cxx::new_allocator<Object*>::_M_max_size() const [93]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Object*, std::allocator<Object*> >::max_size() const [98]
[97]     0.0    0.00    0.00       8         std::_Vector_base<Object*, std::allocator<Object*> >::_M_get_Tp_allocator() const [97]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Object*, std::allocator<Object*> >::_M_check_len(unsigned long, char const*) const [122]
[98]     0.0    0.00    0.00       8         std::vector<Object*, std::allocator<Object*> >::max_size() const [98]
                0.00    0.00       8/8           std::vector<Object*, std::allocator<Object*> >::_S_max_size(std::allocator<Object*> const&) [100]
                0.00    0.00       8/8           std::_Vector_base<Object*, std::allocator<Object*> >::_M_get_Tp_allocator() const [97]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Object*, std::allocator<Object*> >::_S_max_size(std::allocator<Object*> const&) [100]
[99]     0.0    0.00    0.00       8         std::allocator_traits<std::allocator<Object*> >::max_size(std::allocator<Object*> const&) [99]
                0.00    0.00       8/8           __gnu_cxx::new_allocator<Object*>::max_size() const [96]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Object*, std::allocator<Object*> >::max_size() const [98]
[100]    0.0    0.00    0.00       8         std::vector<Object*, std::allocator<Object*> >::_S_max_size(std::allocator<Object*> const&) [100]
                0.00    0.00       8/8           std::allocator_traits<std::allocator<Object*> >::max_size(std::allocator<Object*> const&) [99]
                0.00    0.00       8/8           unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [105]
-----------------------------------------------
                0.00    0.00       8/8           void std::vector<Object*, std::allocator<Object*> >::_M_realloc_insert<Object*>(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >, Object*&&) [126]
[101]    0.0    0.00    0.00       8         std::vector<Object*, std::allocator<Object*> >::_S_relocate(Object**, Object**, Object**, std::allocator<Object*>&) [101]
                0.00    0.00       8/8           std::vector<Object*, std::allocator<Object*> >::_S_do_relocate(Object**, Object**, Object**, std::allocator<Object*>&, std::integral_constant<bool, true>) [102]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Object*, std::allocator<Object*> >::_S_relocate(Object**, Object**, Object**, std::allocator<Object*>&) [101]
[102]    0.0    0.00    0.00       8         std::vector<Object*, std::allocator<Object*> >::_S_do_relocate(Object**, Object**, Object**, std::allocator<Object*>&, std::integral_constant<bool, true>) [102]
                0.00    0.00       8/8           Object** std::__relocate_a<Object**, Object**, std::allocator<Object*> >(Object**, Object**, Object**, std::allocator<Object*>&) [103]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Object*, std::allocator<Object*> >::_S_do_relocate(Object**, Object**, Object**, std::allocator<Object*>&, std::integral_constant<bool, true>) [102]
[103]    0.0    0.00    0.00       8         Object** std::__relocate_a<Object**, Object**, std::allocator<Object*> >(Object**, Object**, Object**, std::allocator<Object*>&) [103]
                0.00    0.00      24/24          Object** std::__niter_base<Object**>(Object**) [88]
                0.00    0.00       8/8           std::enable_if<std::__is_bitwise_relocatable<Object*, void>::value, Object**>::type std::__relocate_a_1<Object*, Object*>(Object**, Object**, Object**, std::allocator<Object*>&) [104]
-----------------------------------------------
                0.00    0.00       8/8           Object** std::__relocate_a<Object**, Object**, std::allocator<Object*> >(Object**, Object**, Object**, std::allocator<Object*>&) [103]
[104]    0.0    0.00    0.00       8         std::enable_if<std::__is_bitwise_relocatable<Object*, void>::value, Object**>::type std::__relocate_a_1<Object*, Object*>(Object**, Object**, Object**, std::allocator<Object*>&) [104]
-----------------------------------------------
                0.00    0.00       8/8           std::vector<Object*, std::allocator<Object*> >::_S_max_size(std::allocator<Object*> const&) [100]
[105]    0.0    0.00    0.00       8         unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [105]
-----------------------------------------------
                0.00    0.00       1/6           Sphere::Sphere(Material*, double, Vec3 const&) [137]
                0.00    0.00       5/6           AABB::AABB(Material*, Vec3 const&, Vec3 const&) [69]
[106]    0.0    0.00    0.00       6         Object::Object(Material*) [106]
-----------------------------------------------
                0.00    0.00       6/6           void std::allocator_traits<std::allocator<Object*> >::construct<Object*, Object*>(std::allocator<Object*>&, Object**, Object*&&) [110]
[107]    0.0    0.00    0.00       6         void __gnu_cxx::new_allocator<Object*>::construct<Object*, Object*>(Object**, Object*&&) [107]
                0.00    0.00       6/22          Object*&& std::forward<Object*>(std::remove_reference<Object*>::type&) [89]
                0.00    0.00       6/6           operator new(unsigned long, void*) [115]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<Object*, std::allocator<Object*> >::back() [112]
[108]    0.0    0.00    0.00       6         __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::operator*() const [108]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<Object*, std::allocator<Object*> >::back() [112]
[109]    0.0    0.00    0.00       6         __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::operator-(long) const [109]
                0.00    0.00       6/20          __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::__normal_iterator(Object** const&) [90]
-----------------------------------------------
                0.00    0.00       2/6           Object*& std::vector<Object*, std::allocator<Object*> >::emplace_back<Object*>(Object*&&) [111]
                0.00    0.00       4/6           void std::vector<Object*, std::allocator<Object*> >::_M_realloc_insert<Object*>(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >, Object*&&) [126]
[110]    0.0    0.00    0.00       6         void std::allocator_traits<std::allocator<Object*> >::construct<Object*, Object*>(std::allocator<Object*>&, Object**, Object*&&) [110]
                0.00    0.00       6/22          Object*&& std::forward<Object*>(std::remove_reference<Object*>::type&) [89]
                0.00    0.00       6/6           void __gnu_cxx::new_allocator<Object*>::construct<Object*, Object*>(Object**, Object*&&) [107]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<Object*, std::allocator<Object*> >::push_back(Object*&&) [113]
[111]    0.0    0.00    0.00       6         Object*& std::vector<Object*, std::allocator<Object*> >::emplace_back<Object*>(Object*&&) [111]
                0.00    0.00       6/22          Object*&& std::forward<Object*>(std::remove_reference<Object*>::type&) [89]
                0.00    0.00       6/6           std::vector<Object*, std::allocator<Object*> >::back() [112]
                0.00    0.00       4/10          std::vector<Object*, std::allocator<Object*> >::end() [94]
                0.00    0.00       4/4           void std::vector<Object*, std::allocator<Object*> >::_M_realloc_insert<Object*>(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >, Object*&&) [126]
                0.00    0.00       2/6           void std::allocator_traits<std::allocator<Object*> >::construct<Object*, Object*>(std::allocator<Object*>&, Object**, Object*&&) [110]
-----------------------------------------------
                0.00    0.00       6/6           Object*& std::vector<Object*, std::allocator<Object*> >::emplace_back<Object*>(Object*&&) [111]
[112]    0.0    0.00    0.00       6         std::vector<Object*, std::allocator<Object*> >::back() [112]
                0.00    0.00       6/10          std::vector<Object*, std::allocator<Object*> >::end() [94]
                0.00    0.00       6/6           __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::operator-(long) const [109]
                0.00    0.00       6/6           __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::operator*() const [108]
-----------------------------------------------
                0.00    0.00       6/6           createScene() [59]
[113]    0.0    0.00    0.00       6         std::vector<Object*, std::allocator<Object*> >::push_back(Object*&&) [113]
                0.00    0.00       6/6           std::remove_reference<Object*&>::type&& std::move<Object*&>(Object*&) [114]
                0.00    0.00       6/6           Object*& std::vector<Object*, std::allocator<Object*> >::emplace_back<Object*>(Object*&&) [111]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<Object*, std::allocator<Object*> >::push_back(Object*&&) [113]
[114]    0.0    0.00    0.00       6         std::remove_reference<Object*&>::type&& std::move<Object*&>(Object*&) [114]
-----------------------------------------------
                0.00    0.00       6/6           void __gnu_cxx::new_allocator<Object*>::construct<Object*, Object*>(Object**, Object*&&) [107]
[115]    0.0    0.00    0.00       6         operator new(unsigned long, void*) [115]
-----------------------------------------------
                0.00    0.00       1/5           std::_Vector_base<Object*, std::allocator<Object*> >::~_Vector_base() [145]
                0.00    0.00       4/5           void std::vector<Object*, std::allocator<Object*> >::_M_realloc_insert<Object*>(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >, Object*&&) [126]
[116]    0.0    0.00    0.00       5         std::_Vector_base<Object*, std::allocator<Object*> >::_M_deallocate(Object**, unsigned long) [116]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Object*> >::deallocate(std::allocator<Object*>&, Object**, unsigned long) [124]
-----------------------------------------------
                0.00    0.00       4/4           createScene() [59]
[117]    0.0    0.00    0.00       4         Lambertian::Lambertian(Vec3 const&) [117]
                0.00    0.00       4/4           Material::Material() [118]
-----------------------------------------------
                0.00    0.00       4/4           Lambertian::Lambertian(Vec3 const&) [117]
[118]    0.0    0.00    0.00       4         Material::Material() [118]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Object*> >::deallocate(std::allocator<Object*>&, Object**, unsigned long) [124]
[119]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<Object*>::deallocate(Object**, unsigned long) [119]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Object*> >::allocate(std::allocator<Object*>&, unsigned long) [125]
[120]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<Object*>::allocate(unsigned long, void const*) [120]
                0.00    0.00       4/12          __gnu_cxx::new_allocator<Object*>::_M_max_size() const [93]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Object*, std::allocator<Object*> >::_M_realloc_insert<Object*>(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >, Object*&&) [126]
[121]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::difference_type __gnu_cxx::operator-<Object**, std::vector<Object*, std::allocator<Object*> > >(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > > const&, __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > > const&) [121]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::base() const [91]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Object*, std::allocator<Object*> >::_M_realloc_insert<Object*>(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >, Object*&&) [126]
[122]    0.0    0.00    0.00       4         std::vector<Object*, std::allocator<Object*> >::_M_check_len(unsigned long, char const*) const [122]
                0.00    0.00      16/16          std::vector<Object*, std::allocator<Object*> >::size() const [92]
                0.00    0.00       8/8           std::vector<Object*, std::allocator<Object*> >::max_size() const [98]
                0.00    0.00       4/4           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [128]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Object*, std::allocator<Object*> >::_M_realloc_insert<Object*>(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >, Object*&&) [126]
[123]    0.0    0.00    0.00       4         std::_Vector_base<Object*, std::allocator<Object*> >::_M_allocate(unsigned long) [123]
                0.00    0.00       4/4           std::allocator_traits<std::allocator<Object*> >::allocate(std::allocator<Object*>&, unsigned long) [125]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<Object*, std::allocator<Object*> >::_M_deallocate(Object**, unsigned long) [116]
[124]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<Object*> >::deallocate(std::allocator<Object*>&, Object**, unsigned long) [124]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<Object*>::deallocate(Object**, unsigned long) [119]
-----------------------------------------------
                0.00    0.00       4/4           std::_Vector_base<Object*, std::allocator<Object*> >::_M_allocate(unsigned long) [123]
[125]    0.0    0.00    0.00       4         std::allocator_traits<std::allocator<Object*> >::allocate(std::allocator<Object*>&, unsigned long) [125]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<Object*>::allocate(unsigned long, void const*) [120]
-----------------------------------------------
                0.00    0.00       4/4           Object*& std::vector<Object*, std::allocator<Object*> >::emplace_back<Object*>(Object*&&) [111]
[126]    0.0    0.00    0.00       4         void std::vector<Object*, std::allocator<Object*> >::_M_realloc_insert<Object*>(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >, Object*&&) [126]
                0.00    0.00       8/9           std::_Vector_base<Object*, std::allocator<Object*> >::_M_get_Tp_allocator() [95]
                0.00    0.00       8/16          __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::base() const [91]
                0.00    0.00       8/8           std::vector<Object*, std::allocator<Object*> >::_S_relocate(Object**, Object**, Object**, std::allocator<Object*>&) [101]
                0.00    0.00       4/4           std::vector<Object*, std::allocator<Object*> >::_M_check_len(unsigned long, char const*) const [122]
                0.00    0.00       4/4           std::vector<Object*, std::allocator<Object*> >::begin() [127]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::difference_type __gnu_cxx::operator-<Object**, std::vector<Object*, std::allocator<Object*> > >(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > > const&, __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > > const&) [121]
                0.00    0.00       4/4           std::_Vector_base<Object*, std::allocator<Object*> >::_M_allocate(unsigned long) [123]
                0.00    0.00       4/22          Object*&& std::forward<Object*>(std::remove_reference<Object*>::type&) [89]
                0.00    0.00       4/6           void std::allocator_traits<std::allocator<Object*> >::construct<Object*, Object*>(std::allocator<Object*>&, Object**, Object*&&) [110]
                0.00    0.00       4/5           std::_Vector_base<Object*, std::allocator<Object*> >::_M_deallocate(Object**, unsigned long) [116]
-----------------------------------------------
                0.00    0.00       4/4           void std::vector<Object*, std::allocator<Object*> >::_M_realloc_insert<Object*>(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >, Object*&&) [126]
[127]    0.0    0.00    0.00       4         std::vector<Object*, std::allocator<Object*> >::begin() [127]
                0.00    0.00       4/20          __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::__normal_iterator(Object** const&) [90]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<Object*, std::allocator<Object*> >::_M_check_len(unsigned long, char const*) const [122]
[128]    0.0    0.00    0.00       4         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [128]
-----------------------------------------------
                0.00    0.00       1/3           std::chrono::duration<double, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1l> >, std::ratio<1l, 1000000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [147]
                0.00    0.00       2/3           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [152]
[129]    0.0    0.00    0.00       3         std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [129]
-----------------------------------------------
                0.00    0.00       2/2           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [151]
[130]    0.0    0.00    0.00       2         std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const [130]
-----------------------------------------------
                0.00    0.00       1/2           main [1]
                0.00    0.00       1/2           std::chrono::duration<double, std::ratio<1l, 1l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [148]
[131]    0.0    0.00    0.00       2         std::chrono::duration<double, std::ratio<1l, 1l> >::count() const [131]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK4AABB9intersectERK3RayddR4Vec3RdS4_ [158]
[132]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [132]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN9RayTracerC2Eii [157]
[133]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [133]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z18findFirstCollisionRK3RayRKSt6vectorIP6ObjectSaIS4_EE [156]
[134]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [134]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6Sphere9intersectERK3RayddR4Vec3RdS4_ [159]
[135]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [135]
-----------------------------------------------
                0.00    0.00       1/1           render(double, double, std::vector<Object*, std::allocator<Object*> > const&, char*, Vec3 const&, Vec3 const&, Vec3 const&, double, int, int) [2]
[136]    0.0    0.00    0.00       1         writePPM(char*, unsigned int, unsigned int, unsigned char*) [136]
-----------------------------------------------
                0.00    0.00       1/1           createScene() [59]
[137]    0.0    0.00    0.00       1         Sphere::Sphere(Material*, double, Vec3 const&) [137]
                0.00    0.00       1/6           Object::Object(Material*) [106]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Object*>::allocator() [140]
[138]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Object*>::new_allocator() [138]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Object*>::~allocator() [141]
[139]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Object*>::~new_allocator() [139]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl::_Vector_impl() [61]
[140]    0.0    0.00    0.00       1         std::allocator<Object*>::allocator() [140]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Object*>::new_allocator() [138]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl::~_Vector_impl() [143]
[141]    0.0    0.00    0.00       1         std::allocator<Object*>::~allocator() [141]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Object*>::~new_allocator() [139]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<Object**>(Object**, Object**) [154]
[142]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<Object**>(Object**, Object**) [142]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Object*, std::allocator<Object*> >::~_Vector_base() [145]
[143]    0.0    0.00    0.00       1         std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl::~_Vector_impl() [143]
                0.00    0.00       1/1           std::allocator<Object*>::~allocator() [141]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl::_Vector_impl() [61]
[144]    0.0    0.00    0.00       1         std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl_data::_Vector_impl_data() [144]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Object*, std::allocator<Object*> >::~vector() [153]
[145]    0.0    0.00    0.00       1         std::_Vector_base<Object*, std::allocator<Object*> >::~_Vector_base() [145]
                0.00    0.00       1/5           std::_Vector_base<Object*, std::allocator<Object*> >::_M_deallocate(Object**, unsigned long) [116]
                0.00    0.00       1/1           std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl::~_Vector_impl() [143]
-----------------------------------------------
                0.00    0.00       1/1           std::chrono::duration<double, std::ratio<1l, 1l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [148]
[146]    0.0    0.00    0.00       1         std::enable_if<std::chrono::__is_duration<std::chrono::duration<double, std::ratio<1l, 1l> > >::value, std::chrono::duration<double, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<double, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [146]
                0.00    0.00       1/1           std::chrono::duration<double, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1l> >, std::ratio<1l, 1000000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [147]
-----------------------------------------------
                0.00    0.00       1/1           std::enable_if<std::chrono::__is_duration<std::chrono::duration<double, std::ratio<1l, 1l> > >::value, std::chrono::duration<double, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<double, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [146]
[147]    0.0    0.00    0.00       1         std::chrono::duration<double, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1l> >, std::ratio<1l, 1000000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [147]
                0.00    0.00       1/3           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [129]
                0.00    0.00       1/1           std::chrono::duration<double, std::ratio<1l, 1l> >::duration<double, void>(double const&) [149]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[148]    0.0    0.00    0.00       1         std::chrono::duration<double, std::ratio<1l, 1l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [148]
                0.00    0.00       1/1           std::enable_if<std::chrono::__is_duration<std::chrono::duration<double, std::ratio<1l, 1l> > >::value, std::chrono::duration<double, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<double, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [146]
                0.00    0.00       1/2           std::chrono::duration<double, std::ratio<1l, 1l> >::count() const [131]
-----------------------------------------------
                0.00    0.00       1/1           std::chrono::duration<double, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1l> >, std::ratio<1l, 1000000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [147]
[149]    0.0    0.00    0.00       1         std::chrono::duration<double, std::ratio<1l, 1l> >::duration<double, void>(double const&) [149]
-----------------------------------------------
                0.00    0.00       1/1           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [152]
[150]    0.0    0.00    0.00       1         std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&) [150]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[151]    0.0    0.00    0.00       1         std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [151]
                0.00    0.00       2/2           std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const [130]
                0.00    0.00       1/1           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [152]
-----------------------------------------------
                0.00    0.00       1/1           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [151]
[152]    0.0    0.00    0.00       1         std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [152]
                0.00    0.00       2/3           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [129]
                0.00    0.00       1/1           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&) [150]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[153]    0.0    0.00    0.00       1         std::vector<Object*, std::allocator<Object*> >::~vector() [153]
                0.00    0.00       1/9           std::_Vector_base<Object*, std::allocator<Object*> >::_M_get_Tp_allocator() [95]
                0.00    0.00       1/1           void std::_Destroy<Object**, Object*>(Object**, Object**, std::allocator<Object*>&) [155]
                0.00    0.00       1/1           std::_Vector_base<Object*, std::allocator<Object*> >::~_Vector_base() [145]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<Object**, Object*>(Object**, Object**, std::allocator<Object*>&) [155]
[154]    0.0    0.00    0.00       1         void std::_Destroy<Object**>(Object**, Object**) [154]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<Object**>(Object**, Object**) [142]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Object*, std::allocator<Object*> >::~vector() [153]
[155]    0.0    0.00    0.00       1         void std::_Destroy<Object**, Object*>(Object**, Object**, std::allocator<Object*>&) [155]
                0.00    0.00       1/1           void std::_Destroy<Object**>(Object**, Object**) [154]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [59] createScene()          [57] Vec3::nearZero() const [45] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min()
   [6] randomDouble()         [26] Vec3::normalize() const [50] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long)
   [3] calculateColor(Ray const&, std::vector<Object*, std::allocator<Object*> > const&, int) [79] Vec3::operator/(double) const [51] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long)
   [4] findFirstCollision(Ray const&, std::vector<Object*, std::allocator<Object*> > const&) [14] Vec3::operator[](int) const [52] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine()
 [132] __static_initialization_and_destruction_0(int, int) [40] Vec3::operator-(Vec3 const&) const [20] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()()
  [73] __static_initialization_and_destruction_0(int, int) [46] Vec3::operator*(Vec3 const&) const [146] std::enable_if<std::chrono::__is_duration<std::chrono::duration<double, std::ratio<1l, 1l> > >::value, std::chrono::duration<double, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<double, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  [76] __static_initialization_and_destruction_0(int, int) [41] Vec3::operator*(double) const [147] std::chrono::duration<double, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1l> >, std::ratio<1l, 1000000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  [70] __static_initialization_and_destruction_0(int, int) [28] Vec3::operator+(Vec3 const&) const [148] std::chrono::duration<double, std::ratio<1l, 1l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
 [133] __static_initialization_and_destruction_0(int, int) [35] Camera::getRay(double, double) const [149] std::chrono::duration<double, std::ratio<1l, 1l> >::duration<double, void>(double const&)
 [134] __static_initialization_and_destruction_0(int, int) [75] Sphere::getCenter() const [150] std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)
 [135] __static_initialization_and_destruction_0(int, int) [19] Sphere::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [151] std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
  [64] __static_initialization_and_destruction_0(int, int) [93] __gnu_cxx::new_allocator<Object*>::_M_max_size() const [152] std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
   [2] render(double, double, std::vector<Object*, std::allocator<Object*> > const&, char*, Vec3 const&, Vec3 const&, Vec3 const&, double, int, int) [96] __gnu_cxx::new_allocator<Object*>::max_size() const [100] std::vector<Object*, std::allocator<Object*> >::_S_max_size(std::allocator<Object*> const&)
  [72] img2rgb(unsigned int, unsigned int, double*) [21] __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::base() const [101] std::vector<Object*, std::allocator<Object*> >::_S_relocate(Object**, Object**, Object**, std::allocator<Object*>&)
 [136] writePPM(char*, unsigned int, unsigned int, unsigned char*) [33] __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::operator*() const [111] Object*& std::vector<Object*, std::allocator<Object*> >::emplace_back<Object*>(Object*&&)
 [117] Lambertian::Lambertian(Vec3 const&) [91] __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::base() const [102] std::vector<Object*, std::allocator<Object*> >::_S_do_relocate(Object**, Object**, Object**, std::allocator<Object*>&, std::integral_constant<bool, true>)
  [54] Lambertian::~Lambertian() [108] __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::operator*() const [126] void std::vector<Object*, std::allocator<Object*> >::_M_realloc_insert<Object*>(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >, Object*&&)
  [25] Ray::Ray(Vec3 const&, Vec3 const&) [109] __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::operator-(long) const [94] std::vector<Object*, std::allocator<Object*> >::end()
  [42] Ray::Ray()             [97] std::_Vector_base<Object*, std::allocator<Object*> >::_M_get_Tp_allocator() const [112] std::vector<Object*, std::allocator<Object*> >::back()
  [69] AABB::AABB(Material*, Vec3 const&, Vec3 const&) [38] std::uniform_real_distribution<double>::param_type::a() const [127] std::vector<Object*, std::allocator<Object*> >::begin()
  [47] AABB::~AABB()          [43] std::uniform_real_distribution<double>::param_type::b() const [113] std::vector<Object*, std::allocator<Object*> >::push_back(Object*&&)
  [22] Vec3::Vec3(double, double, double) [130] std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const [63] std::vector<Object*, std::allocator<Object*> >::vector()
  [17] Vec3::Vec3()          [131] std::chrono::duration<double, std::ratio<1l, 1l> >::count() const [153] std::vector<Object*, std::allocator<Object*> >::~vector()
  [53] Vec3::operator-()     [129] std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [30] std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long)
  [55] Camera::Camera(Vec3 const&, Vec3 const&, Vec3 const&, double, double) [122] std::vector<Object*, std::allocator<Object*> >::_M_check_len(unsigned long, char const*) const [68] std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long)
 [106] Object::Object(Material*) [29] std::vector<Object*, std::allocator<Object*> >::end() const [24] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long)
 [137] Sphere::Sphere(Material*, double, Vec3 const&) [92] std::vector<Object*, std::allocator<Object*> >::size() const [49] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)
  [39] HitInfo::HitInfo()     [32] std::vector<Object*, std::allocator<Object*> >::begin() const [48] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
 [118] Material::Material()   [98] std::vector<Object*, std::allocator<Object*> >::max_size() const [11] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()()
  [78] Material::~Material() [140] std::allocator<Object*>::allocator() [88] Object** std::__niter_base<Object**>(Object**)
 [119] __gnu_cxx::new_allocator<Object*>::deallocate(Object**, unsigned long) [141] std::allocator<Object*>::~allocator() [103] Object** std::__relocate_a<Object**, Object**, std::allocator<Object*> >(Object**, Object**, Object**, std::allocator<Object*>&)
 [120] __gnu_cxx::new_allocator<Object*>::allocate(unsigned long, void const*) [142] void std::_Destroy_aux<true>::__destroy<Object**>(Object**, Object**) [104] std::enable_if<std::__is_bitwise_relocatable<Object*, void>::value, Object**>::type std::__relocate_a_1<Object*, Object*>(Object**, Object**, Object**, std::allocator<Object*>&)
 [107] void __gnu_cxx::new_allocator<Object*>::construct<Object*, Object*>(Object**, Object*&&) [123] std::_Vector_base<Object*, std::allocator<Object*> >::_M_allocate(unsigned long) [12] double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
 [138] __gnu_cxx::new_allocator<Object*>::new_allocator() [61] std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl::_Vector_impl() [128] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [139] __gnu_cxx::new_allocator<Object*>::~new_allocator() [143] std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl::~_Vector_impl() [15] double const& std::min<double>(double const&, double const&)
  [44] __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::__normal_iterator(Object* const* const&) [116] std::_Vector_base<Object*, std::allocator<Object*> >::_M_deallocate(Object**, unsigned long) [105] unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
  [34] __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > >::operator++() [144] std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_impl_data::_Vector_impl_data() [114] std::remove_reference<Object*&>::type&& std::move<Object*&>(Object*&)
  [90] __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::__normal_iterator(Object** const&) [95] std::_Vector_base<Object*, std::allocator<Object*> >::_M_get_Tp_allocator() [23] std::remove_reference<double&>::type&& std::move<double&>(double&)
 [121] __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > >::difference_type __gnu_cxx::operator-<Object**, std::vector<Object*, std::allocator<Object*> > >(__gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > > const&, __gnu_cxx::__normal_iterator<Object**, std::vector<Object*, std::allocator<Object*> > > const&) [62] std::_Vector_base<Object*, std::allocator<Object*> >::_Vector_base() [18] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<double> >, std::is_move_constructible<double>, std::is_move_assignable<double> >::value, void>::type std::swap<double>(double&, double&)
  [16] bool __gnu_cxx::operator!=<Object* const*, std::vector<Object*, std::allocator<Object*> > >(__gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > > const&, __gnu_cxx::__normal_iterator<Object* const*, std::vector<Object*, std::allocator<Object*> > > const&) [145] std::_Vector_base<Object*, std::allocator<Object*> >::~_Vector_base() [89] Object*&& std::forward<Object*>(std::remove_reference<Object*>::type&)
  [13] Lambertian::randomUnitVector() const [124] std::allocator_traits<std::allocator<Object*> >::deallocate(std::allocator<Object*>&, Object**, unsigned long) [154] void std::_Destroy<Object**>(Object**, Object**)
  [10] Lambertian::randomInHemisphere(Vec3 const&) const [125] std::allocator_traits<std::allocator<Object*> >::allocate(std::allocator<Object*>&, unsigned long) [155] void std::_Destroy<Object**, Object*>(Object**, Object**, std::allocator<Object*>&)
   [9] Lambertian::scatter(Ray const&, HitInfo const&, Vec3&, Ray&) const [99] std::allocator_traits<std::allocator<Object*> >::max_size(std::allocator<Object*> const&) [58] Sphere::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const::{lambda(double)#1}::operator()(double) const
  [27] Ray::at(double) const [110] void std::allocator_traits<std::allocator<Object*> >::construct<Object*, Object*>(std::allocator<Object*>&, Object**, Object*&&) [60] operator*(double, Vec3 const&)
   [5] AABB::intersect(Ray const&, double, double, Vec3&, double&, Vec3&) const [66] std::uniform_real_distribution<double>::param_type::param_type(double, double) [115] operator new(unsigned long, void*)
  [36] Vec3::dot(Vec3 const&) const [67] std::uniform_real_distribution<double>::uniform_real_distribution(double, double) [31] _init
  [56] Vec3::cross(Vec3 const&) const [7] double std::uniform_real_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  [37] Vec3::length() const    [8] double std::uniform_real_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_real_distribution<double>::param_type const&)
